-- FLZ Smart TP Shoot GUI with Velocity Boost, Directional, Jump TP, Circular Movement

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "FLZ_SmartTP_GUI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 200, 0, 200)
frame.Position = UDim2.new(0.5, -100, 0.5, -100)
frame.BackgroundTransparency = 0.3
frame.BackgroundColor3 = Color3.new(0,0,0)
frame.Active = true
frame.Draggable = true
frame.Visible = false

local openButton = Instance.new("TextButton", gui)
openButton.Size = UDim2.new(0, 100, 0, 30)
openButton.Position = UDim2.new(0, 20, 0.5, -15)
openButton.Text = "Open TP GUI"
openButton.TextColor3 = Color3.new(1,1,1)
openButton.BackgroundColor3 = Color3.new(0.2,0.2,0.2)
openButton.Font = Enum.Font.GothamBold
openButton.TextScaled = true
openButton.Draggable = true

openButton.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
    openButton.Text = frame.Visible and "Close TP GUI" or "Open TP GUI"
end)

-- GUI Elements
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 20)
title.Text = "ðŸ¤– Smart TP Shoot"
title.TextColor3 = Color3.new(1,1,1)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextScaled = true

local nameBox = Instance.new("TextBox", frame)
nameBox.Size = UDim2.new(0, 180, 0, 24)
nameBox.Position = UDim2.new(0,10,0,25)
nameBox.PlaceholderText = "Enter player name"
nameBox.TextColor3 = Color3.new(1,1,1)
nameBox.BackgroundColor3 = Color3.new(0.2,0.2,0.2)
nameBox.ClearTextOnFocus = true

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0, 180, 0, 24)
toggleButton.Position = UDim2.new(0,10,0,55)
toggleButton.Text = "TP Shoot Once"
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.BackgroundColor3 = Color3.new(0.3,0.3,0.3)

local autoButton = Instance.new("TextButton", frame)
autoButton.Size = UDim2.new(0, 180, 0, 24)
autoButton.Position = UDim2.new(0,10,0,85)
autoButton.Text = "Auto TP Shoot: OFF"
autoButton.TextColor3 = Color3.new(1,1,1)
autoButton.BackgroundColor3 = Color3.new(0.3,0.3,0.3)

local status = Instance.new("TextLabel", frame)
status.Size = UDim2.new(0, 180, 0, 80)
status.Position = UDim2.new(0,10,0,115)
status.Text = "Status: Idle"
status.TextColor3 = Color3.new(1,1,1)
status.BackgroundTransparency = 1
status.TextScaled = true
status.TextWrapped = true

-- Variables
local targetPlayer = nil
local autoTP = false
local lastShoot = 0

-- Helpers
local function hasGrappleTool()
    local char = LocalPlayer.Character
    if not char then return nil end
    for _, tool in pairs(char:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("RemoteEvent") then
            return tool
        end
    end
    return nil
end

local function isGrappleAttached()
    local tool = hasGrappleTool()
    return tool and tool:FindFirstChild("Rope") and tool.Rope.Visible
end

local function getPredictedPosition(torso)
    local vel = torso.AssemblyLinearVelocity
    local dist = (torso.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    local predictionTime = math.clamp(dist / 200, 0.05, 1.5)
    local predictedPos = torso.Position + (vel * predictionTime)

    if math.abs(vel.Y) >= 5 then
        predictedPos += Vector3.new(0, 5, 0)
    end

    return predictedPos
end

local function chooseStuds(walkspeed, velocitySpeed)
    local extra = math.clamp(velocitySpeed / 2, 0, 100)
    if velocitySpeed >= 90 then
        return math.random(90,150), 0.400
    elseif velocitySpeed == 0 then
        return math.random(7,15), 0.275
    elseif math.abs(walkspeed - 25) <= 2 or math.abs(velocitySpeed - 25) <= 2 then
        return math.random(25,30), 0.275
    elseif walkspeed == 16 then
        return math.random(8,15) + extra, 0.275
    elseif walkspeed == 50 then
        return math.random(60,120) + extra, 0.275
    elseif walkspeed == 100 then
        return math.random(140,190) + extra, 0.275
    else
        return math.random(40,80) + extra, 0.275
    end
end

-- Main TP logic
local function tpOnly()
    if not targetPlayer then
        status.Text = "âŒ No target"
        return nil, nil
    end

    local char = LocalPlayer.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    local targetChar = targetPlayer.Character
    local targetHRP = targetChar and targetChar:FindFirstChild("HumanoidRootPart")
    local targetHum = targetChar and targetChar:FindFirstChildOfClass("Humanoid")

    if hrp and targetHRP and targetHum then
        local velocity = targetHRP.AssemblyLinearVelocity
        local velocitySpeed = velocity.Magnitude
        local walkspeed = targetHum.WalkSpeed
        local offset, delay = chooseStuds(walkspeed, velocitySpeed)

        local tpPos

        if velocitySpeed >= 1 then
            tpPos = targetHRP.Position + velocity.Unit * offset
        elseif velocitySpeed < 17 then
            local angle = tick() * 2
            local radius = math.random(8, 15)
            tpPos = targetHRP.Position + Vector3.new(
                math.cos(angle) * radius,
                0,
                math.sin(angle) * radius
            )
        else
            tpPos = targetHRP.Position + (targetHRP.CFrame.LookVector * offset)
        end

        -- Only if target is jumping (Y velocity â‰¥ 5)
        if math.abs(velocity.Y) >= 5 then
            tpPos = tpPos + Vector3.new(0, math.random(10, 20), 0)
        end

        hrp.CFrame = CFrame.new(tpPos, targetHRP.Position)
        status.Text = string.format("âœ… TP'd %.0f studs (Walk %.1f | Vel %.1f)", offset, walkspeed, velocitySpeed)

        return offset, delay
    else
        status.Text = "âŒ Missing HRP or Humanoid"
        return nil, nil
    end
end

local function shootOnly()
    if not targetPlayer then return end
    local targetChar = targetPlayer.Character
    local targetHRP = targetChar and targetChar:FindFirstChild("HumanoidRootPart")
    if targetHRP then
        local tool = hasGrappleTool()
        if tool then
            local aimPos = getPredictedPosition(targetHRP)
            tool.RemoteEvent:FireServer(aimPos)
            status.Text = status.Text .. " & Shot"

            if isGrappleAttached() then
                status.Text = status.Text .. " | Grappled (auto off)"
                autoTP = false
                autoButton.Text = "Auto TP Shoot: OFF"
            end
        end
    end
end

-- Buttons
toggleButton.MouseButton1Click:Connect(function()
    local name = nameBox.Text:lower()
    if name ~= "" then
        for _, p in pairs(Players:GetPlayers()) do
            if p.Name:lower():find(name) or p.DisplayName:lower():find(name) then
                targetPlayer = p
                status.Text = "âœ… Target: "..p.Name
                break
            end
        end
        if not targetPlayer then
            status.Text = "âŒ Target not found"
            return
        end
    else
        status.Text = "âš ï¸ Enter name"
        return
    end

    local studs, delay = tpOnly()
    if studs and delay then
        task.wait(delay)
        shootOnly()
    end
end)

autoButton.MouseButton1Click:Connect(function()
    if not targetPlayer then
        status.Text = "âš ï¸ No target for auto"
        return
    end
    autoTP = not autoTP
    autoButton.Text = autoTP and "Auto TP Shoot: ON" or "Auto TP Shoot: OFF"
    lastShoot = tick()
end)

RunService.RenderStepped:Connect(function()
    if autoTP and targetPlayer then
        local studs, delay = tpOnly()
        if studs and (tick() - lastShoot >= delay) then
            shootOnly()
            lastShoot = tick()
        end
    end
end)
